"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/pagos/page",{

/***/ "(app-pages-browser)/./src/lib/payments.ts":
/*!*****************************!*\
  !*** ./src/lib/payments.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaymentsService: () => (/* binding */ PaymentsService),\n/* harmony export */   paymentsService: () => (/* binding */ paymentsService)\n/* harmony export */ });\n/* harmony import */ var _supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n\nclass PaymentsService {\n    async createPaymentRequest(input) {\n        const { userId, courseId, fullName, idNumber, hasExperience, experienceNotes, method, last6digits, sentCapture } = input;\n        const { error } = await this.supabase.from('payment_requests').insert({\n            user_id: userId,\n            course_id: courseId,\n            amount: 0,\n            currency: 'USD',\n            method,\n            reference: null,\n            paid_at: null,\n            receipt_url: null,\n            note: JSON.stringify({\n                fullName,\n                idNumber,\n                hasExperience,\n                experienceNotes,\n                method,\n                last6digits,\n                sentCapture\n            }),\n            status: 'pending'\n        });\n        if (error) throw error;\n    }\n    async listMyPaymentRequests(userId) {\n        const { data, error } = await this.supabase.from('payment_requests').select('*').eq('user_id', userId).order('created_at', {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    // ADMIN: listar pendientes\n    async adminListPending() {\n        const { data, error } = await this.supabase.from('payment_requests').select(\"\\n        id,\\n        user_id,\\n        course_id,\\n        amount,\\n        currency,\\n        method,\\n        reference,\\n        paid_at,\\n        receipt_url,\\n        note,\\n        status,\\n        created_at,\\n        profiles:user_id ( full_name, email ),\\n        courses:course_id ( title, price )\\n      \").eq('status', 'pending').order('created_at', {\n            ascending: true\n        });\n        if (error) throw error;\n        return data;\n    }\n    // ADMIN: aprobar solicitud -> crea enrollment si no existe\n    async approveRequest(requestId, reviewerId) {\n        // Obtener solicitud\n        const { data: req, error: getErr } = await this.supabase.from('payment_requests').select('id, user_id, course_id, status').eq('id', requestId).single();\n        if (getErr) throw getErr;\n        if (!req) throw new Error('Solicitud no encontrada');\n        if (req.status !== 'pending') throw new Error('La solicitud ya fue procesada');\n        // Aprobar\n        const { error: upErr } = await this.supabase.from('payment_requests').update({\n            status: 'approved',\n            reviewed_by: reviewerId,\n            reviewed_at: new Date().toISOString()\n        }).eq('id', requestId);\n        if (upErr) throw upErr;\n        // Crear enrollment si no existe\n        const { data: existing } = await this.supabase.from('enrollments').select('id').eq('user_id', req.user_id).eq('course_id', req.course_id).maybeSingle();\n        if (!existing) {\n            const { error: insErr } = await this.supabase.from('enrollments').insert({\n                user_id: req.user_id,\n                course_id: req.course_id,\n                progress: 0\n            });\n            if (insErr) throw insErr;\n        }\n    }\n    // ADMIN: rechazar solicitud\n    async rejectRequest(requestId, reviewerId) {\n        const { error } = await this.supabase.from('payment_requests').update({\n            status: 'rejected',\n            reviewed_by: reviewerId,\n            reviewed_at: new Date().toISOString()\n        }).eq('id', requestId);\n        if (error) throw error;\n    }\n    constructor(){\n        this.supabase = (0,_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.createClientSupabaseClient)();\n    }\n}\nconst paymentsService = new PaymentsService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/payments.ts\n"));

/***/ })

});