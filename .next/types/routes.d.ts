// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/admin" | "/admin/courses/[id]" | "/admin/courses/[id]/lessons/[lessonId]" | "/admin/courses/[id]/lessons/create" | "/admin/courses/create" | "/admin/cursos/[id]/examen" | "/admin/cursos/[id]/leccion/[lessonId]/quiz" | "/admin/cursos/[id]/lecciones" | "/admin/debug" | "/admin/pagos" | "/certificado/[courseId]" | "/contact" | "/curso/[id]" | "/curso/[id]/leccion/[lessonId]" | "/cursos" | "/cursos/[id]" | "/cursos/[id]/examen" | "/cursos/[id]/leccion/[lessonId]" | "/cv/[code]" | "/dashboard" | "/instructores" | "/login" | "/mi-cv" | "/perfil/[code]" | "/registro" | "/test-notifications"
type AppRouteHandlerRoutes = "/api/health"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = "/home"
type RewriteRoutes = "/api/health"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/admin": {}
  "/admin/courses/[id]": { "id": string; }
  "/admin/courses/[id]/lessons/[lessonId]": { "id": string; "lessonId": string; }
  "/admin/courses/[id]/lessons/create": { "id": string; }
  "/admin/courses/create": {}
  "/admin/cursos/[id]/examen": { "id": string; }
  "/admin/cursos/[id]/leccion/[lessonId]/quiz": { "id": string; "lessonId": string; }
  "/admin/cursos/[id]/lecciones": { "id": string; }
  "/admin/debug": {}
  "/admin/pagos": {}
  "/api/health": {}
  "/certificado/[courseId]": { "courseId": string; }
  "/contact": {}
  "/curso/[id]": { "id": string; }
  "/curso/[id]/leccion/[lessonId]": { "id": string; "lessonId": string; }
  "/cursos": {}
  "/cursos/[id]": { "id": string; }
  "/cursos/[id]/examen": { "id": string; }
  "/cursos/[id]/leccion/[lessonId]": { "id": string; "lessonId": string; }
  "/cv/[code]": { "code": string; }
  "/dashboard": {}
  "/home": {}
  "/instructores": {}
  "/login": {}
  "/mi-cv": {}
  "/perfil/[code]": { "code": string; }
  "/registro": {}
  "/test-notifications": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
