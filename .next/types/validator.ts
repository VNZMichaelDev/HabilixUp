// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../src/app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/courses/[id]/lessons/[lessonId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/courses/[id]/lessons/[lessonId]">> = Specific
  const handler = {} as typeof import("../../src/app/admin/courses/[id]/lessons/[lessonId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/courses/[id]/lessons/create/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/courses/[id]/lessons/create">> = Specific
  const handler = {} as typeof import("../../src/app/admin/courses/[id]/lessons/create/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/courses/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/courses/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/admin/courses/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/courses/create/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/courses/create">> = Specific
  const handler = {} as typeof import("../../src/app/admin/courses/create/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/cursos/[id]/examen/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/cursos/[id]/examen">> = Specific
  const handler = {} as typeof import("../../src/app/admin/cursos/[id]/examen/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/cursos/[id]/leccion/[lessonId]/quiz/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/cursos/[id]/leccion/[lessonId]/quiz">> = Specific
  const handler = {} as typeof import("../../src/app/admin/cursos/[id]/leccion/[lessonId]/quiz/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/cursos/[id]/lecciones/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/cursos/[id]/lecciones">> = Specific
  const handler = {} as typeof import("../../src/app/admin/cursos/[id]/lecciones/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/debug/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/debug">> = Specific
  const handler = {} as typeof import("../../src/app/admin/debug/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../src/app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/pagos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/pagos">> = Specific
  const handler = {} as typeof import("../../src/app/admin/pagos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/certificado/[courseId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/certificado/[courseId]">> = Specific
  const handler = {} as typeof import("../../src/app/certificado/[courseId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../src/app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/curso/[id]/leccion/[lessonId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/curso/[id]/leccion/[lessonId]">> = Specific
  const handler = {} as typeof import("../../src/app/curso/[id]/leccion/[lessonId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/curso/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/curso/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/curso/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cursos/[id]/examen/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cursos/[id]/examen">> = Specific
  const handler = {} as typeof import("../../src/app/cursos/[id]/examen/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cursos/[id]/leccion/[lessonId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cursos/[id]/leccion/[lessonId]">> = Specific
  const handler = {} as typeof import("../../src/app/cursos/[id]/leccion/[lessonId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cursos/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cursos/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/cursos/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cursos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cursos">> = Specific
  const handler = {} as typeof import("../../src/app/cursos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cv/[code]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cv/[code]">> = Specific
  const handler = {} as typeof import("../../src/app/cv/[code]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/instructores/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/instructores">> = Specific
  const handler = {} as typeof import("../../src/app/instructores/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mi-cv/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mi-cv">> = Specific
  const handler = {} as typeof import("../../src/app/mi-cv/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/perfil/[code]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/perfil/[code]">> = Specific
  const handler = {} as typeof import("../../src/app/perfil/[code]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/registro/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/registro">> = Specific
  const handler = {} as typeof import("../../src/app/registro/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-notifications/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-notifications">> = Specific
  const handler = {} as typeof import("../../src/app/test-notifications/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../src/app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
